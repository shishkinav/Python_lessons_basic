__author__ = 'Шишкин Анатолий Васильевич'

# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1
# 1 1 2 3 5 8 13

def fibonacci(n, m):
    '''
    функция выводит на печать участок ряда фибоначи с элемента n по элемент m
    '''
    fb = []
    # через цикл формируем ряд фибоначчи вплоть до элемента m, запрошенного пользователем
    for i in range(m):
        if 0 <= i <= 1:
            fb.append(1)
        else:
            fb.append(fb[i-2] + fb[i-1])
    # делаем возврат из функции запрашиваемого ряда fb
    return print('Запрашиваемый вами участок ряда фибоначи выглядит следующим образом:\n', fb[n:m])

print('--- Задача 1 - уровень normal - начало ---')

# запрашиваем у пользователя начальный и конечный элементы для вывода и радуемся
fibonacci(int(input('Введите начало участка ряда Фибоначчи:\n')), int(input('Введите окончание интересующего участка ряда Фибоначчи:\n')))

print('--- Задача 1 - уровень normal - конец ---')
input('Посмотрите результат и нажмите Enter')

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()


def sort_to_max(origin_list):
    pass

sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0])

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.


# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

