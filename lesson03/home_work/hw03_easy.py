__author__ = 'Шишкин Анатолий Васильевич'

# Задание-1:
# Напишите функцию, округляющую полученное произвольное десятичное число
# до кол-ва знаков (кол-во знаков передается вторым аргументом).
# Округление должно происходить по математическим правилам (0.6 --> 1, 0.4 --> 0).
# Для решения задачи не используйте встроенные функции и функции из модуля math.

def my_round(number, ndigits):
    '''
    функция округления числа number (получается как float) с целочисленным указанием количества символов после точки ndigits для округления
    '''
    list = []
    # раскладываем полученное float значение посимвольно в список
    for i in str(number):
        # по ходу итераций находим индекс символа "точка" в списке
        if i == '.':
            list.append(i)
            index = list.index(i)
        else:
            list.append(int(i))

    # обрабатываем посимвольно элементы в порядке справа на лево, начиная с элемента, который находится справа от округляемого
    for i in range(index + ndigits + 1, -1, -1):
        # условие по которому понимаем, что это крайний отбрасываемый после округления символ
        if ((i == index + ndigits + 1) and (list[i] >= 5)):
            addUP(list, i)
            continue
        # условие пропуска итерации без изменения элемента списка, если он является точкой
        elif list[i] == '.':
            continue
        # условие проверки каждого элемента, не стал ли он больше 9 после округлений значений справа от него
        elif list[i] == 10:
            list[i] = 0
            addUP(list, i)
        # собственно, если сюда дошли, то ничего с элементом делать не надо, поэтому pass
        else:
            pass
    # в завершении исполняемой функции мы возвращаем значение типа флоат, используя другую функцию
    return listToFloat(list, ndigits + index + 1)

def addUP(list, index):
    '''
    функция приращения предыдущего элемента, получает исходный список и индекс элемента, который следует за округляемым
    '''
    # если округлямый символ не является точкой
    if list[index - 1] != '.':
        list[index - 1] += 1
    # если округляемый элемент является точкой
    else:
        list[index - 2] += 1

def listToFloat(list, index):
    '''
    функция трансформации полученного списка list в float значение с количеством символов равным index
    '''
    transfer = ''
    for i in list:
        # перебирая все элементы списка собираем все значения в одну строковую переменную transfer
        if list.index(i) <= index:
            transfer += str(i)
    # возвращаемое значение типа float
    return float(transfer)

print('--- Задача 1 - уровень Easy - начало ---')

print(my_round(2.1234567, 5))
print(my_round(2.1999967, 5))
print(my_round(2.9999967, 5))

print('--- Задача 1 - уровень Easy - конец ---')
input('Посмотрите результат и нажмите Enter')

# Задание-2:
# Дан шестизначный номер билета. Определить, является ли билет счастливым.
# Решение реализовать в виде функции.
# Билет считается счастливым, если сумма его первых и последних цифр равны.
# !!!P.S.: функция не должна НИЧЕГО print'ить

def lucky_ticket(ticket_number):
    list = []
    # раскладываем полученное значение посимвольно в список в виде целочисленных
    for i in str(ticket_number):
        list.append(int(i))
    # если билет состсоит из 6 символов, то начинаем обрабатывать
    if len(list) == 6:
        # обнуляем значения сумм
        sum1 = sum2 = 0
        # рассчитываем сумму первых трёх и последних трёх элементов
        for n in range(3):
            sum1 += list[n]
            sum2 += list[n+3]
        # проверяем счатливчика
        if sum1 == sum2:
            return True
        # если в счастье не повезло - повезет в любви
        else:
            return False
    # если количество символов билета не соответствует шести, то это фейк
    else:
        return False

print('--- Задача 2 - уровень Easy - конец ---')

print(lucky_ticket(123006))
print(lucky_ticket(12321))
print(lucky_ticket(436751))
print(lucky_ticket(436752))

print('--- Задача 2 - уровень Easy - конец ---')
input('Посмотрите результат и нажмите Enter')